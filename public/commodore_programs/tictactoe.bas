#RetroDevStudio.MetaData.BASIC:2049,BASIC V2,uppercase,10,10
10 PRINT
20 C1=3:C2=7     :REM RED , YELLOW
25 BR=3          :REM BORDER (6 = BLUE)
30 BG=0          :REM BACKGROUND (6 = BLUE)
40 FG=3          :REM FOREGROUND / FRAME / TEXT (1 = WHITE)
45 POKE53281,BG  :REM SET SCREEN BACKGROUND
46 POKE 53280,BR :REM SET BORDER BACKGROUND  
50 POKE646,FG    :REM SET DEFAULT PRINT COLOUR
55 REM *** TIC TAC TOE 2025 ***
60 PRINT CHR$(147):PRINT   
65 POKE646,1:PRINT SPC(3);"** TIC TAC TOE 2025 -RSOUSSAN???"
72 REM ===============Z=0:PRINT
73 PRINT:INPUT "NUMBER OF GAMES";T
74 Z=0
80 P1S=0:P2S=0   :REM SET BASE PLAYER SCORE
85 REM GLOBAL SCOREBOARD VARIABLES
90 SW=20:SH=2:SR=11:SC=9  :REM SCOREBOARD WIDTH,HEIGHT,ROW,COL (MOVED UP 2)
95 FOR G=1 TO T  :REM START SERIES LOOP
100 GOSUB 500    :REM DRAW FIRST BOARD
110 NEXT G       :REM NEXT IN SERIES LOOP
120 GOSUB 5200   :REM SERIES WINNER CHECK
130 END
500 REM NEW GAME INITIALIZATION
505 REM CHECK IF IT'S FIRST GAME
510 IF Z=0 THEN DIM B$(9):Z=1
518 REM ASSIGN THE VARIABLES FOR BOARD
519 REM STRIP OUT SPACE FROM NUMBER
520 FOR I=1 TO 9:B$(I)=MID$(STR$(I),2):NEXT
530 MOVES=0      :REM START MOVE COUNT
540 PL=1         :REM ASSIGN FIRST PLAYER
542 REM ****
550 REM **** BOARD DRAWING ROUTING ****
555 IF G=1 THEN GOSUB 600 ELSE GOSUB 4000
560 GOTO 850
600 REM DRAW BOARD TO MATCH IMAGE
610 PRINT CHR$(147):PRINT  :REM CLEAR SCREEN
620 POKE646,1:PRINT SPC(3);"** TIC TAC TOE 2025 -RSOUSSAN **"
630 REM POKE 646,1:PRINT SPC(12);"???":POKE 646,FG
640 PRINT:PRINT
650 REM DRAW PERFECT 3X3 GRID
660 GOSUB 4500
670 PRINT:PRINT:PRINT:PRINT:PRINT
680 POKE646,1:PRINT SPC(14);"GAME";G;"OF";T:POKE646,FG
690 PRINT:PRINT
700 REM DRAW SCOREBOARD TABLE
710 GOSUB 4800:GOSUB 3000
840 RETURN
850 REM MAIN TURN LOOP
860 GOSUB 2100
870 GOSUB 960
880 GOSUB 1510
890 MOVES=MOVES+1
900 GOSUB 1560
910 IF WIN=1 THEN 1650
920 IF MOVES=9 THEN 1720
930 IF PL=1 THEN PL=2:GOTO 950
940 PL=1
950 GOTO 860
960 REM SELECT MOVE WITH CURSOR
970 FOR C=1 TO 9   :REM 9 POSSIBLE POSITION
980 IF B$(C)<>"X" THEN IF B$(C)<>"O" THEN CU=C:GOTO 1010
990 NEXT C         :REM SKIP IF SPACE IS USED
1000 CU=1          :REM MUST BE SQARE 1
1005 REM FIND FROM COUTING DIVISION RESULTS ABOVE SPOT 
1010 ROW=4+INT((CU-1)/3)*2
1012 REM NOW COUNT TO RIGHT TO SEE HOW MANY SPOT
1020 COL=15+((CU-1)-INT((CU-1)/3)*3)*4
1030 AD=ROW*40+COL
1040 V=PEEK(1024+AD)
1045 CL=C1:IF PL=2 THEN CL=C2
1050 IF V<128 THEN POKE1024+AD,V+128:POKE1024+AD+54272,CL
1060 GET A$:FOR I = 1 TO 10
1070 JS=PEEK(56320)
1080 IF A$="" THEN IF JS=255 THEN 1060
1090 IF (JS AND 1)=0 THEN DIR=-3:GOTO 1240
1100 IF (JS AND 2)=0 THEN DIR=3:GOTO 1240
1110 IF (JS AND 4)=0 THEN DIR=-1:GOTO 1240
1120 IF (JS AND 8)=0 THEN DIR=1:GOTO 1240
1130 IF (JS AND 16)=0 THEN 1440
1140 IF A$=CHR$(145) THEN DIR=-3:GOTO 1240
1150 IF A$=CHR$(17) THEN DIR=3:GOTO 1240
1160 IF A$=CHR$(157) THEN DIR=-1:GOTO 1240
1170 IF A$=CHR$(29) THEN DIR=1:GOTO 1240
1180 IF A$=" " THEN 1440
1190 IF A$=CHR$(13) THEN 1440
1200 GOTO 1060
1240 REM MOVE CURSOR
1250 ROW=4+INT((CU-1)/3)*2
1260 COL=15+((CU-1)-INT((CU-1)/3)*3)*4
1270 AD=ROW*40+COL
1280 IF PEEK(1024+AD)>=128 THEN POKE1024+AD,PEEK(1024+AD)-128:POKE1024+AD+54272,1
1300 TR=CU+DIR
1310 IF TR<1 THEN TR=9
1320 IF TR>9 THEN TR=1
1330 IF B$(TR)="X" THEN TR=TR+DIR:GOTO 1310
1340 IF B$(TR)="O" THEN TR=TR+DIR:GOTO 1310
1350 CU=TR
1360 ROW=4+INT((CU-1)/3)*2
1370 COL=15+((CU-1)-INT((CU-1)/3)*3)*4
1375 CL=C1:IF PL=2 THEN CL=C2
1380 AD=ROW*40+COL
1390 IF PEEK(1024+AD)<128 THEN POKE1024+AD,PEEK(1024+AD)+128:POKE1024+AD+54272,CL
1410 GOTO 1060
1440 REM CONFIRM MOVE
1445 GOSUB 5100 :REM PLAY MOVE SOUND
1450 ROW=4+INT((CU-1)/3)*2
1460 COL=15+((CU-1)-INT((CU-1)/3)*3)*4
1470 AD=ROW*40+COL
1480 V=PEEK(1024+AD)
1490 IF V>=128 THEN POKE 1024+AD,V-128
1500 N=CU
1510 REM PLACE MARK
1520 IF PL=1 THEN B$(N)="X"
1530 IF PL=2 THEN B$(N)="O"
1540 GOSUB 1900
1550 RETURN
1560 REM CHECK FOR WIN
1570 WIN=0:RESTORE 
1580 FOR I=1 TO 8
1590 READ A,B,C
1600 IF B$(A)=B$(B) THEN IF B$(B)=B$(C) THEN IF B$(A)="X" THEN WIN=1
1610 IF B$(A)=B$(B) THEN IF B$(B)=B$(C) THEN IF B$(A)="O" THEN WIN=1
1620 IF WIN=1 THEN I=8
1630 NEXT I
1640 RETURN
1650 REM WIN HANDLING
1660 IF PL=1 THEN P1S=P1S+1
1670 IF PL=2 THEN P2S=P2S+1
1675 GOSUB 3000  :REM UPDATE SCORES
1680 PRINT:PRINT"":PRINT"":PRINT:PRINT:PRINT:PRINT "PLAYER ";PL;" WINS!"
1685 PRINT "PRESS RETURN"
1690 GET A$:IF A$<>CHR$(13) THEN 1690
1700 GOSUB 4000:REM CLEAR BOARD
1710 RETURN
1720 REM DRAW HANDLING
1730 PRINT:PRINT:PRINT "DRAW GAME"
1735 PRINT "PRESS RETURN"
1740 GET A$:IF A$<>CHR$(13) THEN 1740
1750 GOSUB 3000
1760 RETURN
1900 REM DRAW SINGLE MARK WITH COLOUR
1910 ROW=4+INT((N-1)/3)*2
1920 COL=15+((N-1)-INT((N-1)/3)*3)*4
1930 AD=ROW*40+COL+1024
1940 IF B$(N)="X" THEN POKE AD,24:POKE AD+54272,C1
1950 IF B$(N)="O" THEN POKE AD,15:POKE AD+54272,C2
1960 RETURN
2000 REM WINNING COMBINATIONS
2010 DATA 1,2,3
2020 DATA 4,5,6
2030 DATA 7,8,9
2040 DATA 1,4,7
2050 DATA 2,5,8
2060 DATA 3,6,9
2070 DATA 1,5,9
2080 DATA 3,5,7
2100 REM UPDATE PLAYER INDICATOR (ROW 19, COL 0)
2110 POKE 646,FG                :REM WHITE
2120 PRINT CHR$(19);           :REM HOME
2130 FOR I=1 TO 18:PRINT CHR$(17);:NEXT   :REM DOWN 18 ROWS
2140 PRINT CHR$(13);SPC(40);   :REM CLEAR LINE, CR TO COL 0
2150 PRINT CHR$(13);           :REM BACK TO COL 0 AGAIN
2160 IF PL=1 THEN POKE646,C1:PRINT "PLAYER 1 TURN":POKE646,1:RETURN
2170 POKE646,C2:PRINT "PLAYER 2 TURN":POKE646,1:RETURN
3000 REM UPDATE SCORE VALUES IN-PLACE - DYNAMIC
3010 REM POSITION CURSOR FOR PLAYER 1 LABEL
3020 PRINT CHR$(19);:REM HOME
3030 FOR I=1 TO SR+SH:PRINT CHR$(17);:NEXT
3040 FOR I=1 TO SC+SW/4-3:PRINT CHR$(29);:NEXT
3050 PRINT "PLAYER 1";
3060 REM POSITION CURSOR FOR PLAYER 2 LABEL
3070 PRINT CHR$(19);:REM HOME
3080 FOR I=1 TO SR+SH+SH+1:PRINT CHR$(17);:NEXT
3090 FOR I=1 TO SC+SW/4-3:PRINT CHR$(29);:NEXT
3100 PRINT "PLAYER 2";
3110 REM POSITION CURSOR FOR PLAYER 1 SCORE
3120 PRINT CHR$(19);:REM HOME
3130 FOR I=1 TO SR+SH:PRINT CHR$(17);:NEXT
3140 FOR I=1 TO SC+SW/2+SW/4-1:PRINT CHR$(29);:NEXT
3150 POKE646,C1:PRINT P1S;:POKE646,1
3160 REM POSITION CURSOR FOR PLAYER 2 SCORE
3170 PRINT CHR$(19);:REM HOME
3180 FOR I=1 TO SR+SH+SH+1:PRINT CHR$(17);:NEXT
3190 FOR I=1 TO SC+SW/2+SW/4-1:PRINT CHR$(29);:NEXT
3200 POKE646,C2:PRINT P2S;:POKE646,1
3210 RETURN
4000 REM CLRBOARD
4010 FOR N=1 TO 9
4020   ROW=4+INT((N-1)/3)*2
4030   COL=15+((N-1)-INT((N-1)/3)*3)*4
4040   AD=ROW*40+COL+1024
4050   POKE AD,32:POKE AD+54272,FG
4060 NEXT N
4070 RETURN
4500 REM DRAW PERFECT TIC TAC TOE GRID
4510 BR = 4   :REM BASE ROW (MOVED UP 2 MORE)
4520 BC = 14  :REM BASE COL (CENTERED)
4530 REM DRAW TWO HORIZONTAL LINES
4540 FOR R = BR+1 TO BR+3 STEP 2  :REM ROWS 5 AND 7
4550  FOR C = BC TO BC+10          :REM FULL WIDTH
4560   AD = R*40 + C + 1024
4570   POKE AD,67   :REM HORIZONTAL LINE (GRAPHICS)
4580   REM POKE AD+54272,FG
4590  NEXT C
4600 NEXT R
4610 REM DRAW TWO VERTICAL LINES  
4620 FOR C = BC+3 TO BC+7 STEP 4   :REM COLS 17 AND 21
4630  FOR R = BR TO BR+4           :REM ROWS 4-8
4640   AD = R*40 + C + 1024
4650   POKE AD,66   :REM VERTICAL LINE (GRAPHICS)
4660   POKE AD+54272,FG
4670  NEXT R
4680 NEXT C
4690 REM DRAW INTERSECTIONS
4700 FOR R = BR+1 TO BR+3 STEP 2   :REM ROWS 5 AND 7  
4710  FOR C = BC+3 TO BC+7 STEP 4  :REM COLS 17 AND 21
4720   AD = R*40 + C + 1024
4730   POKE AD,91   :REM CROSS INTERSECTION (GRAPHICS)
4740   POKE AD+54272,FG
4750  NEXT C
4760 NEXT R
4770 RETURN
4800 REM DYNAMIC TABLE PARAMETERS
4810 WD = SW          :REM WIDTH OF TABLE
4820 SZ = SH          :REM HEIGHT OF EACH SECTION (RENAMED TO AVOID CONFLICT)
4830 RO = 2           :REM NUMBER OF ROWS (2X2 TABLE)
4840 CO = 2           :REM NUMBER OF COLUMNS
4850 REM CALCULATED VALUES
4860 TH = RO * SZ + RO + 1
4870 OS = 1024+(SR*40)+SC     :REM START POSITION
4880 REM BUILD 4 CORNERS
4885 POKE646,1
4890 POKE OS,112:POKE OS+WD,110
4900 POKE OS+(TH-1)*40,109:POKE OS+(TH-1)*40+WD,125
4910 REM BUILD TOP AND BOTTOM BORDERS
4920 FOR I = 1 TO WD-1
4930   POKE OS+I,67                    :REM TOP BORDER
4940   POKE OS+(TH-1)*40+I,67         :REM BOTTOM BORDER
4950 NEXT I
4960 REM BUILD VERTICAL LINES
4970 FOR R = 1 TO TH-2
4975   POKE OS+R*40,66:POKE OS+R*40+WD,66:POKE OS+R*40+(WD/CO),66
4980 NEXT R
4985 REM BUILD HORIZONTAL DIVIDERS AND T-JUNCTIONS
4987 RW = SH + 1:CL = WD/CO
4988 FOR I = 1 TO WD-1:POKE OS+RW*40+I,67:NEXT I
4989 POKE OS+RW*40,107:POKE OS+RW*40+WD,115:POKE OS+RW*40+CL,91
4990 POKE OS+CL,114:POKE OS+(TH-1)*40+CL,113:POKE 646,FG:RETURN
5000 REM *** SERIES WINNER ***
5005 GOSUB 5100
5010 PRINT CHR$(147)
5020 PRINT SPC(8);"SERIES COMPLETE!"
5030 PRINT:PRINT SPC(8);"FINAL SCORES:"
5040 PRINT:POKE646,C1:PRINT SPC(8);"PLAYER 1: ";P1S:POKE646,FG
5050 POKE646,C2:PRINT SPC(8);"PLAYER 2: ";P2S:POKE646,FG
5060 PRINT
5070 IF P1S>P2S THEN PRINT SPC(6);"PLAYER 1 WINS SERIES!":RETURN
5080 IF P2S>P1S THEN PRINT SPC(6);"PLAYER 2 WINS SERIES!":RETURN
5090 PRINT SPC(8);"SERIES TIED!":RETURN
5100 REM SIMPLE HIGH TONE TEST
5102 IF PL =1 THEN TN = 50
5103 IF PL =2 THEN TN = 75
5105 FOR I=54272 TO 54296:POKE I,0:NEXT
5110 POKE 54296,15    :REM VOLUME
5115 POKE 54272,0     :REM FREQ LOW = 0
5120 POKE 54273,TN    :REM FREQ HIGH = 50 (50*256 = 12800 HZ)
5125 POKE 54276,17    :REM TRIANGLE + GATE ON
5130 FOR I=1 TO 200:NEXT
5135 POKE 54276,16    :REM GATE OFF
5140 RETURN
5200 REM SIMPLE HIGH TONE TEST
5202 IF PL =1 THEN TN = 50
5203 IF PL =2 THEN TN = 75
5205 FOR I=54272 TO 54296:POKE I,0:NEXT
5208 FOR I=1 TO 10
5210 POKE 54296,15    :REM VOLUME
5215 POKE 54272,0     :REM FREQ LOW = 0
5220 POKE 54273,100    :REM FREQ HIGH = 50 (50*256 = 12800 HZ)
5225 POKE 54276,17    :REM TRIANGLE + GATE ON
5226 NEXT
5230 FOR I=1 TO 200:NEXT
5235 POKE 54276,16    :REM GATE OFF
5240 RETURN